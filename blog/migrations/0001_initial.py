# Generated by Django 2.0.6 on 2018-09-10 21:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Category',
                'ordering': ['title'],
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('century', models.IntegerField(choices=[(1700, '1700'), (1800, '1800'), (1900, '1900'), (2000, '2000')], default=2000)),
                ('decade', models.IntegerField(blank=True, choices=[(10, '10'), (20, '20'), (30, '30'), (40, '40'), (50, '50'), (60, '60'), (70, '70'), (80, '80'), (90, '90')], default=0, null=True)),
                ('year', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=0, null=True)),
                ('month', models.IntegerField(blank=True, choices=[(1, 'Jan'), (2, 'Feb'), (3, 'Mar'), (4, 'Apr'), (5, 'May'), (6, 'Jun'), (7, 'Jul'), (8, 'Aug'), (9, 'Sept'), (10, 'Oct'), (11, 'Nov'), (12, 'Dec')], default=1, null=True)),
                ('day', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], default=1, null=True)),
                ('duration_decade', models.IntegerField(blank=True, choices=[(10, '10'), (20, '20'), (30, '30'), (40, '40'), (50, '50'), (60, '60'), (70, '70'), (80, '80'), (90, '90')], default=0, null=True)),
                ('duration_year', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=0, null=True)),
                ('duration_month', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], default=0, null=True)),
                ('duration_day', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)], default=0, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('decade_by_five', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Event Date',
                'verbose_name_plural': 'Event Dates',
            },
        ),
        migrations.CreateModel(
            name='HomePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('title', models.CharField(max_length=200)),
                ('caption', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('alt_text', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Home Post',
                'ordering': ['created_date'],
                'verbose_name_plural': 'Home Posts',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('keywords', models.CharField(max_length=1000)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('categories', models.ManyToManyField(default=1, to='blog.Category')),
                ('event_date', models.ForeignKey(blank=True, default=3, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_event_date_set', to='blog.EventDate')),
            ],
            options={
                'verbose_name': 'Post',
                'ordering': ['created_date'],
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/blog')),
                ('title', models.CharField(max_length=255)),
                ('legend', models.TextField(blank=True, null=True)),
                ('description', models.TextField()),
                ('external_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('img2', models.ImageField(blank=True, null=True, upload_to='images/blog')),
                ('img2_title', models.TextField(blank=True, null=True)),
                ('legend2', models.TextField(blank=True, null=True)),
                ('img2_description', models.TextField(blank=True, null=True)),
                ('img2_external_url', models.URLField(blank=True, null=True)),
                ('img2_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('img3', models.ImageField(blank=True, null=True, upload_to='images/blog')),
                ('img3_title', models.TextField(blank=True, null=True)),
                ('legend3', models.TextField(blank=True, null=True)),
                ('img3_description', models.TextField(blank=True, null=True)),
                ('img3_external_url', models.URLField(blank=True, null=True)),
                ('img3_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('img4', models.ImageField(blank=True, null=True, upload_to='images/blog')),
                ('legend4', models.TextField(blank=True, null=True)),
                ('img4_title', models.TextField(blank=True, null=True)),
                ('img4_description', models.TextField(blank=True, null=True)),
                ('img4_external_url', models.URLField(blank=True, null=True)),
                ('img4_created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Post Image',
                'verbose_name_plural': 'Post Images',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='image_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_set', to='blog.PostImage'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='homepost',
            name='feature_posts',
            field=models.ManyToManyField(default=1, related_name='feature_posts', to='blog.Post'),
        ),
        migrations.AddField(
            model_name='homepost',
            name='title_post',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='title_post', to='blog.Post'),
        ),
        migrations.AlterUniqueTogether(
            name='eventdate',
            unique_together={('century', 'decade', 'year', 'month', 'day')},
        ),
        migrations.AddField(
            model_name='comment',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Post'),
        ),
    ]
